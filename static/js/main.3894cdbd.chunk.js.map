{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","loading","setLoading","jobs","setJobs","value","setValue","fecthJobs","_","a","fetch","response","json","useEffect","className","title","dates","duties","company","map","job","index","id","onClick","dutie","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAyEeA,MAnEf,WAAgB,IAAD,EACiBC,oBAAS,GAD1B,mBACNC,EADM,KACGC,EADH,OAEWF,mBAAS,IAFpB,mBAENG,EAFM,KAEAC,EAFA,OAGaJ,mBAAS,GAHtB,mBAGNK,EAHM,KAGCC,EAHD,KAKPC,EAAS,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,sEACOC,MARf,6CAOQ,cACVC,EADU,gBAEGA,EAASC,OAFZ,OAEVT,EAFU,OAGhBC,EAAQD,GACRD,GAAW,GAJK,2CAAH,sDAWf,GAJAW,qBAAU,SAAAL,GACRD,MACC,IAECN,EACF,OACE,qBAAKa,UAAU,UAAf,SACE,8CAnBO,MAwB2BX,EAAKE,GAAtCU,EAxBM,EAwBNA,MAAOC,EAxBD,EAwBCA,MAAOC,EAxBR,EAwBQA,OAAQC,EAxBhB,EAwBgBA,QAE7B,OACE,qBAAKJ,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,QAAf,UACE,4CACA,qBAAKA,UAAU,iBAEjB,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,OAAf,SACEX,EAAKgB,KAAI,SAACC,EAAKC,GAAW,IACjBC,EAAeF,EAAfE,GAAIJ,EAAWE,EAAXF,QACX,OACE,wBAAiBK,QAAS,SAAAf,GAAC,OAAIF,EAASe,IACtCP,UAAS,cAAST,IAAUgB,GAAS,UADvC,SAGGH,GAHUI,QAQnB,sBAAKR,UAAU,MAAf,UACE,oBAAIA,UAAU,WAAd,SAA0BC,IAC1B,sBAAMD,UAAU,aAAhB,SAA8BI,IAC9B,sBAAMJ,UAAU,OAAhB,SAAwBE,IACxB,qBAAKF,UAAU,SAAf,SACEG,EAAOE,KAAI,SAACK,EAAOH,GACjB,OAAO,oBAAeP,UAAU,QAAzB,UACL,sBAAMA,UAAU,OAAhB,SACE,cAAC,IAAD,MAEF,sBAAMA,UAAU,OAAhB,SAAwBU,MAJXH,oBC9ChBI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3894cdbd.chunk.js","sourcesContent":["import {useEffect, useState} from 'react';\nimport { FaAngleDoubleRight } from 'react-icons/fa';\nimport './sass/all.scss';\n\nconst url = 'https://course-api.com/react-tabs-project';\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [jobs, setJobs] = useState([]);\n  const [value, setValue] = useState(0);\n\n  const fecthJobs = async _ => {\n    const response = await fetch(url);\n    const jobs = await response.json();\n    setJobs(jobs);\n    setLoading(false);\n  }\n\n  useEffect(_ => {\n    fecthJobs();\n  }, []);\n\n  if (loading) {\n    return (\n      <div className='Loading'>\n        <h2>Loading...</h2>\n      </div>\n    )\n  }\n\n  const {title, dates, duties, company} = jobs[value];\n\n  return (\n    <div className=\"App\">\n      <div className='Container'>\n        <div className='Title'>\n          <h2>Experience</h2>\n          <div className='UnderLine'></div>\n        </div>\n        <div className='GridContainer'>\n          <div className='Btns'>{\n            jobs.map((job, index) => {\n              const {id, company} = job;\n              return (\n                <button key={id} onClick={_ => setValue(index)}\n                  className={`Btn ${value === index && 'active'}`}\n                >\n                  {company}\n                </button>\n              );\n            })\n          }</div>\n          <div className='Job'>\n            <h3 className='JobTitle'>{title}</h3>\n            <span className='JobCompany'>{company}</span>\n            <span className='Date'>{dates}</span>\n            <div className='Duties'>{\n              duties.map((dutie, index) => {\n                return <p key={index} className='Dutie'>\n                  <span className='Icon'>\n                    <FaAngleDoubleRight />\n                  </span>\n                  <span className='Text'>{dutie}</span>\n                </p>\n              })\n            }</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}